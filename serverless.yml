# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: almerosen
# "service" is the name of this project. This will also be added to your AWS resource names.
service: Quiztopia-API

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1
  environment:
    JWT_SECRET_KEY: superhemlig_nyckel
  iam:
    role: arn:aws:iam::235494790392:role/lecture-role

functions:
  createUser:
    handler: functions/createUser/index.handler
    events:
      - httpApi:
          path: /auth/signup
          method: post

  loginUser:
    handler: functions/loginUser/index.handler
    events:
      - httpApi:
          path: /auth/login
          method: post

  getAllQuizzes:
    handler: functions/getAllQuizzes/index.handler
    events:
      - httpApi:
          path: /quiz
          method: get

  # Get quiz by userId and quizId
  getQuizById:
    handler: functions/getQuizById/index.handler
    events:
      - httpApi:
          path: /quiz/{userId}/{quizId}
          method: get

  # Create quiz - token required
  createQuiz:
    handler: functions/createQuiz/index.handler
    events:
      - httpApi:
          path: /quiz
          method: post

  # Delete quiz - token required
  deleteQuiz:
    handler: functions/deleteQuiz/index.handler
    events:
      - httpApi:
          path: /quiz/{quizId}
          method: delete

  # Put - add question to quiz - token required
  addQuestion:
    handler: functions/addQuestion/index.handler
    events:
      - httpApi:
          path: /quiz/{quizId}/questions
          method: put

  # Post score on quiz - token required
  submitScore:
    handler: functions/submitScore/index.handler
    events:
      - httpApi:
          path: /quiz/{quizId}/score
          method: post

  # Get leaderboard - get top scores for a quiz
  getLeaderBoard:
    handler: functions/getLeaderboard/index.handler
    events:
      - httpApi:
          path: /quiz/{quizId}/leaderboard
          method: get

resources:
  Resources:
    QuiztopiaUsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Quiztopia-Users
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: usernameIndex
            KeySchema:
              - AttributeName: username
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    QuiztopiaQuizzesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Quiztopia-QuizzesTable
        AttributeDefinitions:
          - AttributeName: quizId
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: quizId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: quizIndex
            KeySchema:
              - AttributeName: quizId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: createdAtIndex
            KeySchema:
              - AttributeName: createdAt
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    QuiztopiaLeaderboardTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Quiztopia-Leaderboard-Table
        AttributeDefinitions:
          - AttributeName: quizId
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
          - AttributeName: score
            AttributeType: N
        KeySchema:
          - AttributeName: quizId
            KeyType: HASH
          - AttributeName: userId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: quizIdScoreIndex
            KeySchema:
              - AttributeName: quizId
                KeyType: HASH
              - AttributeName: score
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
